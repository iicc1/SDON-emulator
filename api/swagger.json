{
  "swagger": "2.0",
  "info": {
    "description": "Software defined optical network emulator with ONOS",
    "version": "1.0.0",
    "title": "SDON Emulator",
    "contact": {
      "email": "iglesias.castreno@ignacio.xyz"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8000",
  "basePath": "/v1",
  "tags": [
    {
      "name": "Deploy",
      "description": "Deploys an optical topology"
    },
    {
      "name": "Remove",
      "description": "Removes data from an active topology"
    },
    {
      "name": "Callback",
      "description": "Manages callbacks"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/deploy/{topologyType}/{topologyName}": {
      "get": {
        "tags": [
          "Deploy"
        ],
        "summary": "Deploys an optical topology from a topology type and name values",
        "description": "",
        "operationId": "deployTopology",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "topologyType",
            "in": "path",
            "description": "Type of the topology",
            "required": true,
            "type": "string"
          },
          {
            "name": "topologyName",
            "in": "path",
            "description": "Name of the topology",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deployment"
          },
          "404": {
            "description": "Topology not found"
          },
          "500": {
            "description": "Error occurred while deploying the topology"
          }
        }
      }
    },
    "/remove/containers": {
      "get": {
        "tags": [
          "Remove"
        ],
        "summary": "Removes the containers of an active optical topology",
        "description": "",
        "operationId": "removeContainers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful removal"
          },
          "500": {
            "description": "Error occurred while removing the containers"
          }
        }
      }
    },
    "/remove/topology": {
      "get": {
        "tags": [
          "Remove"
        ],
        "summary": "Removes an active optical topology from ONOS",
        "description": "",
        "operationId": "removeTopology",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful removal"
          },
          "500": {
            "description": "Error occurred while removing the ONOS topology"
          }
        }
      }
    },
    "/remove/all": {
      "get": {
        "tags": [
          "Remove"
        ],
        "summary": "Removes an active optical topology from ONOS and its related containers",
        "description": "",
        "operationId": "removeAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful removal"
          },
          "500": {
            "description": "Error occurred while removing the ONOS topology and containers"
          }
        }
      }
    },
    "/callback": {
      "post": {
        "tags": [
          "Callback"
        ],
        "summary": "Processes callbacks generated by the agents",
        "description": "",
        "operationId": "callbackFromAgents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Callback data generated by the agents",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Callback"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful processed callback"
          },
          "500": {
            "description": "Error occurred while processing the callback"
          }
        }
      }
    }
  },
  "definitions": {
    "Callback": {
      "type": "string"
    }
  },
  "externalDocs": {
    "description": "Find out more about SDON-emulator",
    "url": "https://github.com/iicc1/SDON-emulator"
  }
}